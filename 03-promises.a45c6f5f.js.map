{"mappings":"oeAcA,IAAAA,EAAAC,EAAA,SACA,MAAMC,EAAOC,SAASC,cAAc,SAC9BC,EAAaF,SAASC,cAAc,kBACpCE,EAAYH,SAASC,cAAc,iBACnCG,EAAcJ,SAASC,cAAc,mBACrCI,EAAeL,SAASC,cAAc,mBAE5CF,EAAKO,MAAMC,QAAU,OACrBR,EAAKO,MAAME,IAAM,OACjBT,EAAKO,MAAMG,WAAa,SACxBJ,EAAaC,MAAMI,OAAS,OAC5BL,EAAaC,MAAMK,aAAe,MAClCN,EAAaC,MAAMM,gBAAkB,UAErCb,EAAKc,iBAAiB,UAkBtB,SAA0BC,GACxBA,EAAMC,iBAEN,IAAK,IAAIC,EAAI,EAAGA,EAAIZ,EAAYa,MAAOD,IACrCE,EAAcF,EAAI,EAAGG,EAAQC,EAAOJ,GACjCK,MAAK,EAACC,SAAEA,EAAUC,MAAAC,MACjB3B,EAAA4B,OAAOC,QAAQ,uBAAqBJ,QAAiBE,MAAU,IAEhEG,OAAM,EAACL,SAAEA,EAAUC,MAAAK,MAClB/B,EAAA4B,OAAOI,QAAQ,sBAAoBP,QAAeM,MAAU,IAGlE7B,EAAK+B,O,IA5BN,MAAMX,EAAQY,OAAOC,SAAS9B,EAAWe,OACpCG,EAAOW,OAAOC,SAAS7B,EAAUc,OAEvC,SAASC,EAAcI,EAAUW,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAAKC,KACvB,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,GACFF,EAAI,C,SAAEb,EAAUC,MAAAU,IAElBG,EAAI,C,SAAEd,EAAUC,MAAAU,GAAQ,GACvBA,EAAM,G","sources":["src/js/03-promises.js"],"sourcesContent":["// Напиши скрипт, который при сабмите формы вызывает функцию\n// createPromise(position, delay) столько раз, сколько ввели в поле amount.\n// При каждом вызове передай ей номер создаваемого промиса(position) и \n// задержку учитывая введенную пользователем первую задержку(delay) и\n// шаг(step).\n\n// Дополни код функции createPromise так, чтобы она возвращала один промис,\n//   который выполянется или отклоняется через delay времени.Значением \n//   промиса должен быть объект, в котором будут свойства position и \n//   delay со значениями одноименных параметров.Используй начальный код \n//   функции для выбора того, что нужно сделать с промисом - выполнить \n//   или отклонить.\n\n\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nconst form = document.querySelector('.form');\nconst delayInput = document.querySelector('[name=\"delay\"]');\nconst stepInput = document.querySelector('[name=\"step\"]');\nconst amountInput = document.querySelector('[name=\"amount\"]');\nconst greateButton = document.querySelector('[type=\"submit\"]');\n\nform.style.display = 'flex';\nform.style.gap = '30px';\nform.style.alignItems = 'center';\ngreateButton.style.height = '40px';\ngreateButton.style.borderRadius = '5px';\ngreateButton.style.backgroundColor = '#44a832';\n\nform.addEventListener('submit', onCreatePromises);\n\n const delay = Number.parseInt(delayInput.value);\nconst step = Number.parseInt(stepInput.value);\n  \nfunction createPromise(position, delay) {\n  return new Promise((res, rej) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        res({ position, delay });\n      }\n      rej({ position, delay });\n    }, delay);\n  });\n};\n\n\nfunction onCreatePromises(event) {\n  event.preventDefault();\n\n  for (let i = 0; i < amountInput.value; i++) {\n    createPromise(i + 1, delay + step * i)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  };\n  form.reset();\n};\n\n\n\n\n\n\n\n\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$delayInput","$47d4ff9957288465$var$stepInput","$47d4ff9957288465$var$amountInput","$47d4ff9957288465$var$greateButton","style","display","gap","alignItems","height","borderRadius","backgroundColor","addEventListener","event","preventDefault","i","value","$47d4ff9957288465$var$createPromise","$47d4ff9957288465$var$delay","$47d4ff9957288465$var$step","then","position","delay","delay2","Notify","success","catch","delay3","failure","reset","Number","parseInt","delay1","Promise","res","rej","shouldResolve","Math","random","setTimeout"],"version":3,"file":"03-promises.a45c6f5f.js.map"}