{"mappings":"gfAcA,IAAAA,EAAAC,EAAA,SACMC,EAAOC,SAASC,cAAc,SAC9BC,EAAaF,SAASC,cAAc,kBACpCE,EAAYH,SAASC,cAAc,iBACnCG,EAAcJ,SAASC,cAAc,mBACrCI,EAAeL,SAASC,cAAc,mBAgC5C,SAASK,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAAKC,GACvB,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,GACFF,EAAI,CAAEH,WAAUC,UAElBG,EAAI,CAAEJ,WAAUC,S,GACfA,E,IAtCPT,EAAKiB,MAAMC,QAAU,OACrBlB,EAAKiB,MAAME,IAAM,OACjBnB,EAAKiB,MAAMG,WAAa,SACxBd,EAAaW,MAAMI,OAAS,OAC5Bf,EAAaW,MAAMK,aAAe,MAClChB,EAAaW,MAAMM,gBAAkB,UAErCvB,EAAKwB,iBAAiB,UAItB,SAA0BC,GACxBA,EAAMC,iBAKN,IAHC,IAAMC,EAAQC,OAAOC,SAAS1B,EAAW2B,OACtCC,EAAOH,OAAOC,SAASzB,EAAU0B,OAE5BE,EAAI,EAAGA,EAAI3B,EAAYyB,MAAOE,IACrCzB,EAAcyB,EAAI,EAAGL,EAAQI,EAAOC,GACjCC,MAAK,SAAAC,G,IAAG1B,EAAQ0B,EAAR1B,SAAUC,EAAKyB,EAALzB,MACjBX,EAAAqC,OAAOC,QAAQ,uBAAwCC,OAAf7B,EAAS,QAAY6B,OAAN5B,EAAM,M,IAE9D6B,OAAM,SAAAJ,G,IAAG1B,EAAQ0B,EAAR1B,SAAUC,EAAKyB,EAALzB,MAClBX,EAAAqC,OAAOI,QAAQ,sBAAqCF,OAAf7B,EAAS,QAAY6B,OAAN5B,EAAM,M,IAGhET,EAAKwC,O","sources":["src/js/03-promises.js"],"sourcesContent":["// Напиши скрипт, который при сабмите формы вызывает функцию\n// createPromise(position, delay) столько раз, сколько ввели в поле amount.\n// При каждом вызове передай ей номер создаваемого промиса(position) и \n// задержку учитывая введенную пользователем первую задержку(delay) и\n// шаг(step).\n\n// Дополни код функции createPromise так, чтобы она возвращала один промис,\n//   который выполянется или отклоняется через delay времени.Значением \n//   промиса должен быть объект, в котором будут свойства position и \n//   delay со значениями одноименных параметров.Используй начальный код \n//   функции для выбора того, что нужно сделать с промисом - выполнить \n//   или отклонить.\n\n\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nconst form = document.querySelector('.form');\nconst delayInput = document.querySelector('[name=\"delay\"]');\nconst stepInput = document.querySelector('[name=\"step\"]');\nconst amountInput = document.querySelector('[name=\"amount\"]');\nconst greateButton = document.querySelector('[type=\"submit\"]');\n\nform.style.display = 'flex';\nform.style.gap = '30px';\nform.style.alignItems = 'center';\ngreateButton.style.height = '40px';\ngreateButton.style.borderRadius = '5px';\ngreateButton.style.backgroundColor = '#44a832';\n\nform.addEventListener('submit', onCreatePromises);\n\n\n\nfunction onCreatePromises(event) {\n  event.preventDefault();\n\n   const delay = Number.parseInt(delayInput.value);\nconst step = Number.parseInt(stepInput.value);\n\n  for (let i = 0; i < amountInput.value; i++) {\n    createPromise(i + 1, delay + step * i)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  };\n  form.reset();\n};\n\n  \nfunction createPromise(position, delay) {\n  return new Promise((res, rej) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        res({ position, delay });\n      }\n      rej({ position, delay });\n    }, delay);\n  });\n};\n\n\n\n\n\n\n\n\n\n\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$delayInput","$ce04d3a99e08e73b$var$stepInput","$ce04d3a99e08e73b$var$amountInput","$ce04d3a99e08e73b$var$greateButton","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","res","rej","shouldResolve","Math","random","setTimeout","style","display","gap","alignItems","height","borderRadius","backgroundColor","addEventListener","event","preventDefault","delay1","Number","parseInt","value","step","i","then","param","Notify","success","concat","catch","failure","reset"],"version":3,"file":"03-promises.cc5445b9.js.map"}